{"version":3,"sources":["shared_components/Header/index.js","components/pages/Login/index.js","components/pages/Register/index.js","shared_components/Avatar/index.js","shared_components/Logo/index.js","shared_components/Nav/index.js","components/tabContent/Overview/index.js","api/wger.js","shared_components/Search/index.js","shared_components/ExerciseDataForm/index.js","shared_components/ExerciseItem/index.js","shared_components/ExerciseList/index.js","shared_components/WorkoutModal/index.js","shared_components/WorkoutCard/index.js","shared_components/WorkoutCardList/index.js","components/tabContent/Workouts/index.js","components/tabContent/Exercises/index.js","components/tabContent/Measurements/index.js","components/tabContent/Tabs/index.js","components/pages/Settings/index.js","components/pages/Logout/index.js","components/pages/Profile/index.js","shared_components/Footer/index.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLogin","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","res","user","wrap","_context","prev","next","preventDefault","fetch","concat","state","member","username","password","method","headers","Accept","sent","json","updateValidated","data","id","stop","_x","apply","arguments","_ref2","_callee2","_context2","setState","validated","history","push","pathname","_x2","_x3","_this2","_this$state","react_router_dom","react_router","exact","path","component","App","src_shared_components_Header","Grid","textAlign","verticalAlign","Column","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","type","value","onChange","objectSpread","target","Button","onClick","Message","href","Register","handleRegister","email","console","log","Avatar","to","alt","src","faker","image","cats","Logo","Nav","handleLogout","logout","updateLogout","onLogout","Menu","inverted","Container","Item","src_shared_components_Logo","position","Icon","name","Dropdown","text","pointing","Divider","src_shared_components_Avatar","Overview","axios","create","baseURL","Authorization","Search","onFormSubmit","onSearch","search","onSubmit","ExerciseDataForm","componentDidMount","setDefaultValues","set","reps","weights","rpe","duration","renderAllInputs","handleInput","val","length","pop","setJSX","renderInput","repsJSX","weightsJSX","rpeJSX","durationJSX","map","_","index","exerciseCount","pval","undefined","key","updateExercises","datetime","updatedExercise","exercise","slice","handleAdd","_ref3","_ref4","currentTime","moment","format","totalSets","List","Description","columns","Row","width","Label","circular","ExerciseItem","handleClick","_this$props","addOption","removeOption","addExercise","removeExercise","addImage","Image","floated","addOrRemoveIcons","_this$props2","Content","color","display","collapse","elements_Header_Header","as","src_shared_components_ExerciseDataForm","equipment","date","_this$props$exercise$","category","ExerciseList","exercises","count","Group","divided","relaxed","selection","src_shared_components_ExerciseItem","WorkoutModal","response","wger","get","params","term","exerciseSearchResults","suggestions","visible","updateVisibility","exerciseResultsJSX","src_shared_components_ExerciseList","foundStatement","exercisesJSX","_callee3","_context3","filter","handleSave","_callee4","_context4","JSON","stringify","userId","workoutName","then","updateWorkout","close","_x4","_callee5","_context5","open","resetWorkout","t0","modalType","t1","_callee6","_context6","_ref7","_callee7","_context7","updatedExercises","exer","_x5","handleDelete","_ref8","_callee8","_context8","workoutId","_x6","handleSelect","_ref9","_callee10","_context10","forEach","_ref10","_callee9","_context9","sets","_x8","renderExercises","_x7","handleStart","_ref11","_callee11","_context11","startTime","_x9","handleFinish","_ref12","_callee12","_context12","_x10","_callee13","_context13","exercisesJSXcollapsed","modalHeader","modalDescription","label","celled","animated","content","modalBottom","Modal","horizontal","src_shared_components_Search","triggerButton","float","hidden","finishTime","trigger","closeIcon","onClose","Actions","WorkoutCard","getExercises","Card","src_shared_components_WorkoutModal","WorkoutCardList","itemsPerRow","centered","workouts","workout","src_shared_components_WorkoutCard","Workouts","getWorkouts","w","renderWorkouts","workoutsJSX","src_shared_components_WorkoutCardList","Exercises","updateExercisePadding","exerciseResults","Measurements","Tabs","paddingBottom","exercisePadding","panes","menuItem","render","Tab","Pane","components_tabContent_Overview","components_tabContent_Workouts","style","components_tabContent_Exercises","components_tabContent_Measurements","PureComponent","Settings","Logout","Profile","status","location","userName","components_pages_Logout","src_shared_components_Nav","components_tabContent_Tabs","assign","components_pages_Settings","Footer","Date","_props$startYear","startYear","_props$currYear","currYear","getFullYear","_props$endYear","endYear","toString","src_shared_components_Footer","ReactDOM","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.7ae5aef4.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './index.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"Header\">\n                Lift Weights\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport { Button, Form, Grid, Message, Segment } from 'semantic-ui-react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport App from '../../App';\nimport Header from '../../../shared_components/Header';\nimport './index.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            member: {\n                username: '',\n                id: '',\n                password: '' \n            },\n            validated: false\n        }\n    }\n\n    handleLogin = async e => {\n        e.preventDefault();\n        const res = await fetch(`http://localhost:5000/login/match?username=${this.state.member.username}&password=${this.state.member.password}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n            },\n        })\n        const user = await res.json()\n        await this.updateValidated(user.data.member, user.data.id);\n    }\n\n    // runs a second check to ensure the retuned username matches\n    // returns boolean true if matching, false otherwise\n    updateValidated = async (user, id) => {\n        if (this.state.member.username === user) {\n            await this.setState({ member: {username: user, id: id }, validated: true })\n            await this.props.history.push({\n                pathname: '/profile', \n                state: { user: this.state.member.username, id: this.state.member.id}\n            });\n        } else {\n            await this.setState({ member: {username: '', password: ''}, validated: false })\n            await this.props.history.push('/login');\n        }\n    }\n\n    render() {\n        const { member, validated } = this.state;\n\n        if (validated === true) {\n            return (\n                <div className='Login'>\n                    <BrowserRouter> \n                        <Route exact path=\"/\" component={App} />\n                    </BrowserRouter>\n                </div>\n            )\n\n        } else {\n            return (\n                // Theme is modified from Semantic UI React's Login Layout\n                // https://github.com/Semantic-Org/Semantic-UI-React/blob/master/docs/src/layouts/LoginLayout.js\n                <div className='Login'>\n                    <Header />\n                    <Grid className='Grid' textAlign='center' verticalAlign='middle'>\n                        <Grid.Column className='Column'>\n                        <Form size='large'>\n                            <Segment stacked>\n                            <Form.Input \n                                fluid icon='child' \n                                iconPosition='left' \n                                placeholder='Username' \n                                type='username'\n                                id='loginUsername'\n                                value={this.state.member.username}\n                                onChange={e => this.setState({ member: {...member, username: e.target.value }})}\n                            />\n                            <Form.Input\n                                fluid\n                                icon='lock'\n                                iconPosition='left'\n                                placeholder='Password'\n                                type='password'\n                                id='loginPassword'\n                                value={this.state.member.password}\n                                onChange={e => this.setState({ member: {...member, password: e.target.value }})}\n                            />\n                    \n                            <Button id='submitButton' fluid size='large' onClick={this.handleLogin}>\n                                Login\n                            </Button>\n                            </Segment>\n                        </Form>\n                        <Message>\n                            <a href='/register'>Register</a>\n                        </Message>\n                        </Grid.Column>\n                    </Grid>  \n                </div>\n            );\n        }\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport { Button, Form, Grid, Message, Segment } from 'semantic-ui-react';\n\nimport Header from '../../../shared_components/Header';\nimport './index.css';\n\nclass Register extends Component {\n    // code source for implementing connection between frontend and backend servers\n    // https://www.youtube.com/watch?v=HPIjjFGYSJ4\n    // controlled component source:\n    // https://reactjs.org/docs/forms.html#controlled-components\n    constructor(props) {\n        super(props);\n        this.state = {\n            member: {\n                username: '',\n                email: '',\n                password: '' \n            },\n            validated: false\n        }\n    }\n\n    handleRegister = async e => {\n        e.preventDefault();\n        const res = await fetch(`http://localhost:5000/register/add?username=${this.state.member.username}&email=${this.state.member.email}&password=${this.state.member.password}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n            },\n        })\n        await console.log(res)\n        const user = await res.json()\n        await this.updateValidated(user.data.member, user.data.id);\n    }\n\n    // runs a second check to ensure the retuned username matches\n    // returns boolean true if matching, false otherwise\n    updateValidated = async (user, id) => {\n\n        if (this.state.member.username === user) {\n            await this.setState({ member: {username: user, id: id }, validated: true })\n            await this.props.history.push({\n                pathname: '/profile', \n                state: { user: this.state.member.username, id: this.state.member.id}\n            });\n        } else {\n            await this.setState({ member: {username: '', password: ''}, validated: false })\n            await this.props.history.push('/registration');\n        }\n    }\n\n    render() {\n        const { member } = this.state;\n        return (\n            // Theme is modified from Semantic UI React's Login Layout\n            // https://github.com/Semantic-Org/Semantic-UI-React/blob/master/docs/src/layouts/LoginLayout.js\n            <div className=\"Register\">\n                <Header />\n                <Grid className='Grid' textAlign='center' verticalAlign='middle'>\n                    <Grid.Column className='Column'>\n                    <Form size='large'>\n                        <Segment stacked>\n                        <Form.Input \n                            fluid icon='child' \n                            iconPosition='left' \n                            placeholder='Username' \n                            type='username'\n                            id=\"registerUsername\"\n                            value={this.state.member.username}\n                            onChange={e => this.setState({ member: {...member, username: e.target.value }})}\n                        />\n                        <Form.Input \n                            fluid icon='child' \n                            iconPosition='left' \n                            placeholder='Email' \n                            type='email'\n                            id=\"registerEmail\"\n                            value={this.state.member.email}\n                            onChange={e => this.setState({ member: { ...member, email: e.target.value}})} \n                        />\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            id=\"registerPassword\"\n                            value={this.state.member.password}\n                            onChange={e => this.setState({ member: {...member, password: e.target.value }})}\n                        />\n                \n                        <Button id=\"submitButton\" fluid size='large' onClick={this.handleRegister}>\n                            Register\n                        </Button>\n                        </Segment>\n                    </Form>\n                    <Message>\n                        <a href='/'>Login</a>\n                    </Message>\n                    </Grid.Column>\n                </Grid>  \n            </div>\n        );\n    }\n}\n\nexport default Register;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport faker from 'faker';\n\nimport './index.css';\n\nclass Avatar extends Component {\n    render() {\n        return (\n            <div className='Avatar'>\n                <Link to='/profile'>\n                    <img alt='Avatar' src={faker.image.cats()} />\n                    <div className='Username'>\n                        <span>{this.props.user}</span>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default Avatar;\n","import React, {Component} from 'react';\n\nimport './index.css';\n\nclass Logo extends Component {\n    render() {\n        return (\n            <div className=\"Logo\">\n                <div>LIFT</div>\n                <div>WEIGHTS</div>\n            </div>\n        );\n    }\n}\n\nexport default Logo;\n","import React, {Component} from 'react';\nimport { Icon, Menu, Container, Dropdown } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../Avatar';\nimport Logo from '../Logo';\nimport './index.css';\n\nclass Nav extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            logout: false\n        }\n    }\n\n    handleLogout = async e => {\n        e.preventDefault();\n        await this.setState({ logout: true });\n        await this.updateLogout();\n    }\n\n    updateLogout = () => {\n        this.props.onLogout(this.state.logout);\n    }\n\n    render() {\n\n        // modified from example of SemanticUI nav bar\n        // source: https://github.com/Semantic-Org/Semantic-UI-React/blob/master/docs/src/layouts/HomepageLayout.js\n        return (\n            <div className='Menu'>\n                <Menu size='large' inverted >\n                    <Container>\n                        <Menu.Item>\n                            <Logo />\n                        </Menu.Item>\n                        <Menu.Menu position='right'>\n                            <Menu.Item>\n                                <Link to='/profile'>\n                                    <Icon name='home' />\n                                </Link>\n                            </Menu.Item>\n                            <Dropdown text='Account' pointing className='link item' >\n                                <Dropdown.Menu >\n                                    <Dropdown.Item>\n                                        <div>\n                                            <Link to='/profile/workouts' className='Link'>\n                                                <Icon name='list layout' /> Workouts\n                                            </Link>\n                                        </div>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item>\n                                        <div>\n                                            <Link to='/profile/exercises' className='Link'>\n                                                <Icon name='unordered list' /> Exercises\n                                            </Link>\n                                        </div>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item>\n                                        <div>\n                                            <Link to='/profile/measurements' className='Link'>\n                                                <Icon name='line graph' /> Measurements\n                                            </Link>\n                                        </div>\n                                    </Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    <Dropdown.Item>\n                                        <div>\n                                            <Link to='/profile/settings' className='Link'>\n                                                <Icon name='cog' /> Settings \n                                            </Link>\n                                        </div>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item>\n                                        <div>\n                                            <Link to='/logout' className='Link' onClick={this.handleLogout}>\n                                                <Icon name='sign out' /> Logout\n                                            </Link>\n                                        </div>\n                                    </Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                            <Menu.Item>\n                                <Avatar user={this.props.user} id={this.props.id} />\n                            </Menu.Item>\n                        </Menu.Menu>\n                    </Container>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nexport default Nav;","import React, {Component} from 'react';\nimport './index.css';\n\nclass Overview extends Component {\n\n    render() {\n        return (\n            <div className=\"Overview\">\n                <p>Cat Ipsum Meow:</p>\n                Freak human out make funny noise mow mow mow mow mow mow success now attack human kitty scratches couch bad kitty leave fur on owners clothes\nSleep on my human's head cat meoooow i iz master of hoomaan, not hoomaan master of i, oooh damn dat dog throwup on your pillow\nCat ipsum dolor sit amet, cat snacks sleep in the bathroom sink. Claws in your leg crusty butthole what a cat-ass-trophy! for caticus cuteicus. Cough furball into food bowl then scratch owner for a new one x sniff all the things yet murder hooman toes. The door is opening! how exciting oh, it's you, meh rub my belly hiss, love me!. Chase ball of string claw at curtains stretch and yawn nibble on tuna ignore human bite human hand toy mouse squeak roll over yet meow all night yet meowwww. Lick plastic bags stare at the wall, play with food and get confused by dust. Get suspicious of own shadow then go play with toilette paper if it fits, i sits swipe at owner's legs, sleep nap yet lick the curtain just to be annoying. Get scared by doggo also cucumerro ears back wide eyed. Tuxedo cats always looking dapper Gate keepers of hell. Run around the house at 4 in the morning sit and stare or spot something, big eyes, big eyes, crouch, shake butt, prepare to pounce you have cat to be kitten me right meow. Brown cats with pink ears kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff bird bird bird bird bird bird human why take bird out i could have eaten that and eat the fat cats food but eat and than sleep on your face. Meow all night where is my slave? I'm getting hungry hell is other people yet drool flee in terror at cucumber discovered on floor, yet give attitude. I shredded your linens for you. Rub butt on table stare at ceiling light i just saw other cats inside the house and nobody ask me before using my litter box. Why must they do that wake up human for food at 4am purr while eating. \n            </div>\n        );\n    }\n}\n\nexport default Overview;","import axios from 'axios';\n\n// create instance of axios with customized request headers, etc.\nexport default axios.create({\n    baseURL: 'https://wger.de/api/v2',\n    headers: {\n        Authorization: 'Client-ID 135997a556d6d3ea3c529258417bddaf4f41e665'\n    }  \n});\n\n","import React, { Component } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport './index.css';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {search: ''}\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSearch(this.state.search);\n    }\n\n    render() {\n        return (\n            <div className='Search'>\n                <Form size='large' onSubmit={this.onFormSubmit}>\n                    <Form.Input \n                        placeholder='Search for Exercise' \n                        type='text'\n                        value={this.state.search}\n                        onChange={e => this.setState({ search: e.target.value })}\n                    />\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, {Component} from 'react';\nimport { Grid, List, Label, Input, Button } from 'semantic-ui-react';\nimport moment from 'moment';\n\nimport './index.css';\n\n\nclass ExerciseDataForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            set: [''],\n            setJSX: <div />,\n            reps: [''],\n            repsJSX: <div />,\n            weights: [''],\n            weightsJSX: <div />,\n            rpe: [''],\n            rpeJSX: <div />,\n            duration: [''],\n            durationJSX: <div />,\n            datetime: [''],\n            exerciseCount: 0,\n            totalSets: 1\n        }\n    }\n\n    componentDidMount = () => {\n        this.setDefaultValues();\n    }\n\n    // set values if null\n    setDefaultValues = () => {\n\n        if (this.props.set !== null) {\n            console.log('setting this.props.set in setDefaultValues')\n            this.setState({ set: this.props.set })\n        }\n\n        if (this.props.reps !== null) {\n            this.setState({ reps: this.props.reps })\n        }\n\n        if (this.props.weights !== null) {\n            this.setState({ weights: this.props.weights })\n        }\n\n        if (this.props.rpe !== null) {\n            this.setState({ rpe: this.props.rpe })\n        }\n\n        if (this.props.duration !== null) {\n            this.setState({ duration: this.props.duration })\n        }\n\n        this.renderAllInputs();\n    }\n\n    // adds data into the respective measurement's array\n    handleInput = (e, data, val) => {\n        e.preventDefault();\n        if (data.length > 0) {\n            data.pop();\n        }\n        data.push(val)\n    }\n\n    // render inputs for all measurements\n    renderAllInputs = () => {\n        this.setState({ setJSX: this.renderInput(this.state.set, 'tinyInput'),\n                        repsJSX: this.renderInput(this.state.reps, 'tinyInput'),\n                        weightsJSX: this.renderInput(this.state.weights, 'smallInput'),\n                        rpeJSX: this.renderInput(this.state.rpe, 'tinyInput'),\n                        durationJSX: this.renderInput(this.state.duration, 'smallInput')\n        })\n    }\n\n    // render array inputs\n    renderInput = (data, name) => {\n        return (\n            <div>\n                {data.map((_, index) => {\n                    this.setState({ exerciseCount: this.state.exerciseCount + 1 });\n\n                    let pval = 0\n                    let val = undefined;\n\n                    if (index > 0 && data[index - 1] !== '') {\n                        pval = data[index - 1]\n                    }\n                    if (index < data.length - 1) {\n                        val = data[index]\n                    }\n\n                    return (\n                        <Input \n                            key={this.state.exerciseCount} \n                            type='text' \n                            placeholder={pval} \n                            className={name}\n                            value={val}\n                            onChange={e => this.handleInput(e, data, e.target.value) } \n                        />\n                    );\n                })}\n            </div>\n        );\n    }\n\n    updateExercises = async () => {\n        const { set, reps, weights, rpe, duration, datetime } = await this.state;\n        const updatedExercise = await [set, reps, weights, rpe, duration, datetime];\n        const length = set.length - 1\n\n        let exercise = updatedExercise.map(e => {\n            return e.slice(0, length);\n        })\n\n        await this.props.updateExercises(exercise);\n    }\n\n    // add a new row of inputs when Add button is clicked\n    handleAdd = async (e) => {\n        e.preventDefault();\n        const { set, reps, weights, rpe, duration, datetime } = await this.state;\n        const currentTime = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n\n        await reps.push('')\n        await weights.push('')\n        await rpe.push('')\n        await duration.push('')\n        await set.push('')\n        await datetime.pop()\n        await datetime.push(currentTime)\n        await datetime.push('')\n\n        await this.setState({ totalSets: this.state.totalSets + 1,\n                              setJSX: this.renderInput(this.state.set, 'tinyInput'),\n                              repsJSX: this.renderInput(this.state.reps, 'tinyInput'),\n                              weightsJSX: this.renderInput(this.state.weights, 'smallInput'),\n                              rpeJSX: this.renderInput(this.state.rpe, 'tinyInput'),\n                              durationJSX: this.renderInput(this.state.duration, 'smallInput')\n        })\n\n        await this.updateExercises();\n    }\n\n    render() {\n        return (\n            <List.Description className='measurement'>\n                <Grid columns='equal'>\n                    <Grid.Row columns={6} className='formRow'>\n                        <Grid.Column width={2}>\n                            <Label className='tinyLabel'>\n                                set\n                            </Label>\n                            {this.state.setJSX}\n                        </Grid.Column>\n                        <Grid.Column width={2}>\n                            <Label className='tinyLabel'>\n                                reps\n                            </Label>\n                            {this.state.repsJSX}\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Label className='smallLabel'>\n                                weights\n                            </Label>\n                            {this.state.weightsJSX}\n                        </Grid.Column>\n                        <Grid.Column width={2}>\n                            <Label className='tinyLabel'>\n                                rpe\n                            </Label>\n                            {this.state.rpeJSX}\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Label className='smallLabel'>\n                                duration\n                            </Label>\n                            {this.state.durationJSX}\n                        </Grid.Column>\n                        <Grid.Column width={3} className='addButtonColumn'>\n                            <Button circular icon='add' size='mini' className='addButton' onClick={(e) => this.handleAdd(e)} />\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </List.Description>\n        );\n    }\n}\n\nexport default ExerciseDataForm;","import React, {Component} from 'react';\nimport { List, Image, Button, Icon, Header } from 'semantic-ui-react';\n\nimport ExerciseDataForm from '../ExerciseDataForm';\nimport './index.css';\n\n\nclass ExerciseItem extends Component {\n\n    handleClick = async e => {\n        e.preventDefault();\n        const { addOption, removeOption } = this.props;\n\n        if (addOption === true && removeOption === false) {\n            await this.props.addExercise(this.props.exercise);\n        } else if (removeOption === true && addOption === false) {\n            await this.props.removeExercise(this.props.exercise.data.id);\n        }\n    }\n\n    addImage = () => {\n        const { image } = this.props.exercise.data;\n\n        if (this.props.addOption === true || this.props.removeOption === true) {\n            return <Image className=\"ExerciseImage\" src={image} verticalAlign=\"middle\" floated='left' />;\n        } else {\n            return <Image className=\"ExerciseImage\" src={image} verticalAlign=\"middle\" floated='right' />;\n        }\n    }\n\n    addOrRemoveIcons = () => {\n\n        const { addOption, removeOption } = this.props;\n\n        if (addOption === true && removeOption === false) {\n            return (\n                <List.Content floated='right'>\n                    <Button inverted color='green' size='tiny' onClick={this.handleClick} >\n                        <Icon name='plus'/> Add Exercise\n                    </Button>\n                </List.Content>\n            );\n        } \n        \n        if (removeOption === true && addOption === false) {\n            return (\n                <List.Content floated='right'>\n                    <Button inverted color='red' size='tiny' onClick={this.handleClick} >\n                        <Icon name='minus'/> Remove Exercise\n                    </Button>\n                </List.Content>\n            );\n        } \n        \n        if (removeOption === true && addOption === true) {\n            return (\n                <List.Content floated='right'>\n                    <Button inverted color='green' size='tiny' onClick={this.handleClick} >\n                        <Icon name='plus'/> Add \n                    </Button>\n                    <Button inverted color='red' size='tiny' onClick={this.handleClick} >\n                        <Icon name='minus'/> Remove \n                    </Button>\n                </List.Content>\n            );\n        }\n        return <div />;\n    }\n\n    updateExercises = async (exercise) => {\n        await exercise.push(this.props.name)\n        await exercise.push(this.props.id)\n        await this.props.updateExercises(exercise);\n    }\n\n    render() {\n\n        if (this.props.display === 'minimal') {\n            return (\n                <List.Item>\n                    <List.Content floated='left'>\n                        <List.Header>\n                            {this.props.name}\n                        </List.Header>\n                    </List.Content>\n                </List.Item>\n            );\n        } else if (this.props.collapse === true && this.props.display === 'full') {\n            return (\n                <List.Item>\n                    <Header as='h4' className='exerciseName'>\n                        {this.props.name}\n                    </Header>\n                </List.Item>\n            );\n        } else if (this.props.collapse !== true && this.props.display === 'full') {\n            return (\n                <List.Item>\n                    <Header as='h4' className='exerciseName'>\n                        {this.props.name}\n                    </Header>\n                     <ExerciseDataForm \n                        name={this.props.name} \n                        id={this.props.id} \n                        equipment={this.props.equipment} \n                        set={this.props.set} \n                        reps={this.props.reps} \n                        weights={this.props.weights} \n                        rpe={this.props.rpe} \n                        duration={this.props.duration} \n                        datetime={this.props.date} \n                        updateExercises={this.updateExercises}\n                    />\n                </List.Item>\n            );\n        } else {\n            const { name, category } = this.props.exercise.data;\n\n            return (\n                <List.Item>\n                    {this.addImage()}\n                    <List.Content floated='left'>\n                        <List.Header>\n                            {name} ({category})\n                        </List.Header>\n                    </List.Content>\n                    {this.addOrRemoveIcons()}\n                </List.Item>\n            );\n        }\n    }\n}\n\nexport default ExerciseItem;","import React, { Component } from 'react';\nimport { Segment, List, Image } from 'semantic-ui-react';\n\nimport ExerciseItem from '../ExerciseItem';\nimport './index.css';\n\nclass ExerciseList extends Component {\n\n    addExercise = (exercise) => {\n        this.props.addExercise(exercise);\n    }\n\n    removeExercise = (id) => {\n        this.props.removeExercise(id);\n    }\n\n    updateExercises = (exercise) => {\n        this.props.updateExercises(exercise);\n    }\n\n    render() {\n        const { exercises, addOption, removeOption, display, collapse } = this.props;\n        const maxDisplay = 3;\n        let count = 0;\n\n        return (\n            <div className='ExerciseList'>\n                <Image.Group size='mini'>\n                    <Segment>\n                        <List size='small' divided relaxed='very' selection verticalAlign='middle'>\n                            {exercises.map((exercise) => {\n                                count += 1;\n                                if (display === 'minimal' && count > maxDisplay) {\n                                    // stops displaying exercises\n                                    return null;\n                                } else if (display === 'minimal' && count <= maxDisplay) {\n                                    // restricts number of exercises from DB that are displayed\n                                    return (\n                                        <ExerciseItem \n                                            className='ExerciseItem' \n                                            key={exercise[1]}    // note unique id\n                                            name={exercise[0]}\n                                            exercise={exercise} \n                                            addOption={addOption}\n                                            removeOption={removeOption}\n                                            addExercise={this.addExercise}\n                                            removeExercise={this.removeExercise}\n                                            display={display}\n                                            updateExercises={this.updateExercises}\n                                        />\n                                    );\n                                } else if (display === 'full') {\n                                    // for displaying all personalized exercise details from DB (e.g. reps, sets, etc)\n                                    return (\n                                        <ExerciseItem \n                                            className='ExerciseItem' \n                                            key={exercise[1]}    // note unique id\n                                            name={exercise[0]} \n                                            id={exercise[1]} \n                                            equipment={exercise[2]} \n                                            set={exercise[3]} \n                                            reps={exercise[4]} \n                                            weights={exercise[5]} \n                                            rpe={exercise[6]} \n                                            duration={exercise[7]} \n                                            datetime={exercise[8]} \n                                            addOption={addOption}\n                                            removeOption={removeOption}\n                                            addExercise={this.addExercise}\n                                            removeExercise={this.removeExercise}\n                                            updateExercises={this.updateExercises}\n                                            display={display}\n                                            collapse={collapse}\n                                        />\n                                    );\n                                }\n                                return (\n                                    // for displaying exercises added to workout from API\n                                    // therefore, the unique id differs from above!\n                                    <ExerciseItem \n                                        className='ExerciseItem' \n                                        key={exercise.data.id}  // note unique id\n                                        exercise={exercise} \n                                        addOption={addOption}\n                                        removeOption={removeOption}\n                                        addExercise={this.addExercise}\n                                        removeExercise={this.removeExercise}\n                                        display={display}\n                                    />\n                                );\n                            })}\n                        </List>\n                    </Segment>\n                </Image.Group>\n            </div>\n        );\n    }\n}\n\nexport default ExerciseList;","import React, { Component } from 'react';\nimport { Modal, Button, Icon, Form, Image, List, Divider, Header, Grid } from 'semantic-ui-react';\nimport moment from 'moment';\n\nimport wger from '../../api/wger';\nimport Search from '../Search';\nimport ExerciseList from '../ExerciseList';\nimport './index.css';\n\nclass WorkoutModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            workoutName: '',\n            exercisesJSX: <div></div>,\n            exercisesJSXcollapsed: <div></div>,\n            exercises: [],\n            visible: false,\n            exerciseResultsJSX: <div></div>,\n            exerciseSearchResults: [],\n            foundStatement: <p id='Found'></p>,\n            open: false,\n            startTime: '',\n            finishTime: '',\n            date: '',\n            updatedExercises: []\n        };\n    }\n\n    // search for exercise results\n    onSearch = async search => {\n        const response = await wger.get('/exercise/search', {\n            params: { term: search }, \n        });\n        await this.setState({ exerciseSearchResults: response.data.suggestions, \n                              visible: true });\n        await this.updateVisibility();\n    };\n\n    // show results from search\n    updateVisibility = () => {\n        if (this.state.visible === true) {\n            this.setState({ exerciseResultsJSX: <ExerciseList \n                                                    exercises={this.state.exerciseSearchResults} \n                                                    addOption={true} \n                                                    removeOption={false} \n                                                    addExercise={this.addExercise} \n                                                />,\n                            foundStatement: <p id='Found'>Found: {this.state.exerciseSearchResults.length} exercises</p>\n            });\n        }\n    };\n\n    // add an exercise to ExerciseList\n    addExercise = async exercise => {\n        await this.state.exercises.push(exercise);\n        await this.setState({ exercisesJSX: <ExerciseList \n                                                exercises={this.state.exercises} \n                                                addOption={false} \n                                                removeOption={true} \n                                                addExercise={this.addExercise} \n                                                removeExercise={this.removeExercise} \n                                            />\n        });\n    }\n\n    // remove an exercise from ExerciseList\n    removeExercise = async id => {\n        await this.setState({ exercises: this.state.exercises.filter(exercise => exercise.data.id !== id) });\n        await this.setState({ exercisesJSX: <ExerciseList \n                                                exercises={this.state.exercises} \n                                                addOption={false} \n                                                removeOption={true} \n                                                addExercise={this.addExercise} \n                                                removeExercise={this.removeExercise} \n                                            />\n        });\n    }\n\n    // when Save is selected, save the workout details\n    handleSave = async (e) => {\n        e.preventDefault();\n        const exercises = await JSON.stringify(this.state.exercises);\n        await fetch(`http://localhost:5000/workout/new?userId=${this.props.userId}&workoutName=${this.state.workoutName}&exercises=${exercises}`, {\n            method: 'GET',\n        }).then(this.props.updateWorkout()\n        ).then(this.close());\n    }\n\n    // close the modal\n    close = async () => {\n        await this.setState({ open: false });\n        await this.resetWorkout();\n        if (this.props.modalType === await 'start') {\n            await this.props.close();\n        }\n    }\n\n    // resets workout values so the modal is fresh for the next time it is opened\n    resetWorkout = async () => {\n        await this.setState({ workoutName: '', \n                              exercises: [], \n                              exercisesJSX: <div />, \n                              exerciseSearchResults: [],\n                              exerciseResultsJSX: <div /> \n        });\n    }\n\n    // update new exercise stats\n    updateExercises = async (exercise) => {\n        const id = await exercise[exercise.length - 1]\n\n        // filter out previous set if identical exercise id exists for this workout\n        await this.setState({ updatedExercises: this.state.updatedExercises.filter(exer => {\n                return exer[exer.length - 1] !== id;\n            })\n        });\n        this.state.updatedExercises.push(exercise);\n        console.log('updated exercises in WorkoutModal')\n        console.log(this.state.updatedExercises)\n    }\n\n    // delete workout\n    handleDelete = async (e) => {\n        e.preventDefault();\n        await fetch(`http://localhost:5000/workouts/delete?userId=${this.props.userId}&id=${this.props.workoutId}`);\n        await this.props.updateWorkout();\n        await this.close();\n    }\n\n    // select workout\n    handleSelect = async (e) => {\n        e.preventDefault()\n        await this.setState({ open: true })\n\n        // retrieve workout exercises from database\n        let exercises = [];\n        const res = await fetch(`http://localhost:5000/workout/retrieve?id=${this.props.workoutId}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n            },\n        })\n\n        const resJSON = await res.json();\n\n        resJSON.forEach(async e => {\n            await exercises.push([e.name, e.id, e.equipment, e.sets, e.reps, e.weights, e.rpe, e.duration, e.date, this.props.userId])\n        })\n        await this.setState({ exercises: exercises });\n        await this.renderExercises();\n    }\n\n    // start workout\n    handleStart = async (e) => {\n        e.preventDefault()\n        await this.setState({ open: true, startTime: moment().format('LT'), date: moment().format('L') })\n    }\n\n    // finish workout\n    handleFinish = async (e) => {\n        e.preventDefault()\n        const { updatedExercises } = this.props;\n\n        const data = await JSON.stringify(updatedExercises);\n\n        await fetch(`http://localhost:5000/stats/add?workoutId=${this.props.workoutId}&data=${data}`, {\n            method: 'GET',\n        }).then(this.close());\n    }\n\n    renderExercises = async () => {\n        if (await this.state.exercises.length > 0) {\n            await this.setState({ exercisesJSX: <ExerciseList \n                                                    exercises={this.state.exercises} \n                                                    display='full' \n                                                    collapse={true}\n                                                />, \n                                  exercisesJSXcollapsed: <ExerciseList \n                                                    exercises={this.state.exercises} \n                                                    display='full' \n                                                    collapse={false}\n                                                    updateExercises={this.updateExercises}\n                                                /> \n            })\n        }\n    }\n\n    // modal name based on type\n    modalHeader = () => {\n        if (this.props.modalType === 'create') {\n            return (\n                <Header color='blue'>\n                    Create New Workout\n                </Header>\n            );\n        } else if (this.props.modalType === 'edit') {\n            return (\n                <Header color='blue'>\n                    Edit Workout\n                </Header>\n            );\n        } else if (this.props.modalType === 'delete') {\n            return (\n                <Header color='red'>\n                    Delete Workout\n                </Header>\n            );\n        } else if (this.props.modalType === 'select') {\n            return (\n                <Header color='blue'>\n                    {this.props.workoutName}\n                </Header>\n            );\n        } else {\n            return (\n                <Header color='blue'>\n                    {this.props.workoutName}\n                </Header>\n            );\n        }\n    }\n\n    // Workout details in modal\n    modalDescription = () => {\n        const { exercisesJSX } = this.state;\n\n        if (this.props.modalType === 'create') {\n            return (\n                <Image.Group size='mini'>\n                    <Form onSubmit={this.handleSave} size='large' className='createExerciseList'>\n                        <Form.Input \n                            label='Workout Name'\n                            placeholder='Workout Name' \n                            id='workoutName'\n                            value={this.state.workoutName}\n                            onChange={e => this.setState({ workoutName: e.target.value })}\n                        />\n                        <Header as='h3'>Exercises</Header>\n                        <List celled animated verticalAlign='middle'>\n                            {exercisesJSX}\n                        </List>\n                        <Button.Group floated='left' className='formButtonGroup'>\n                            <Button color='grey' content='Cancel' onClick={() => this.close} />\n                        </Button.Group>\n                        <Button.Group floated='right' className='formButtonGroup'>\n                            <Button color='blue' className='formSaveButton'>\n                                <Icon name='checkmark' />  Save\n                            </Button>\n                        </Button.Group>\n                    </Form>\n                </Image.Group>\n            );\n        } else if (this.props.modalType === 'delete') {\n            return (\n                <Header as='h3' textAlign='center'>Are you sure you want to delete this workout?</Header>\n            );\n        } else if (this.props.modalType === 'edit') {\n            return (\n                <Header as='h3' textAlign='center'>Remove / Add Exercises</Header>\n            );\n        } else if (this.props.modalType === 'select') {\n            return (\n                <div>\n                    <Header as='h3' textAlign='center'>Exercises</Header>\n                    {this.state.exercisesJSX}\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    {this.props.exercisesJSX}\n                    <Header as='h4'>Start: {this.state.startTime}</Header>\n                </div>\n            );\n        }\n    }\n\n    // bottom content in modal\n    modalBottom = () => {\n        const { exerciseResultsJSX } = this.state;\n\n        if (this.props.modalType === 'create') {\n            return (\n                <Modal.Content>\n                    <Divider horizontal>\n                        <Header as='h4'>\n                            <Icon name='search plus' />\n                            Search for Exercises\n                        </Header>\n                    </Divider>\n                    <Search onSearch={this.onSearch} />\n                    {exerciseResultsJSX}\n                </Modal.Content>\n            );\n        } else if (this.props.modalType === 'delete') {\n            return (\n                <Button.Group size='medium' floated='right' className='bottomModalButtons'>\n                    <Button color='green' id='leftButton' onClick={() => this.setState({ open: false })}>\n                        Keep Workout\n                    </Button>\n                    <Button color='red' id='rightButton' onClick={(e) => this.handleDelete(e)}>\n                        Delete\n                    </Button>\n                </Button.Group>\n            );\n        } else if (this.props.modalType === 'edit') {\n            return (\n                <Button.Group size='medium' floated='right' className='bottomModalButtons'>\n                    <Button color='grey' id='leftButton' onClick={() => this.close()}>\n                        Cancel\n                    </Button>\n                    <Button color='blue' id='rightButton'>\n                        Save \n                    </Button>\n                </Button.Group>\n            );\n        } else if (this.props.modalType === 'select') {\n            return (\n                <Grid>\n                    <Grid.Row columns={2} className='startWorkoutButtonRow'>\n                        <Grid.Column className='cancelWorkoutButtonColumn'>\n                            <Button color='red' size='medium' floated='left' onClick={() => this.setState({ open: false })}>\n                                Cancel\n                            </Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <WorkoutModal \n                                userId={this.props.userId} \n                                modalType=\"start\" \n                                workoutId={this.props.workoutId}\n                                workoutName={this.props.workoutName}\n                                exercisesJSX={this.state.exercisesJSXcollapsed}\n                                updateExercises={this.updateExercises}\n                                updatedExercises={this.state.updatedExercises}\n                                close={this.close}\n                            />\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            );\n        } else {  // bottom Modal buttons for Start workout modal\n            return (\n                <Button.Group size='medium' floated='right' className='bottomModalButtons'>\n                    <Button color='grey' id='leftButton' onClick={() => this.close()}>\n                        Cancel\n                    </Button>\n                    <Button color='blue' id='rightButton' onClick={(e) => this.handleFinish(e)}>\n                        Finish \n                    </Button>\n                </Button.Group>\n            );\n        }\n    }\n\n    // appearance of trigger button that opens modal\n    triggerButton = () => {\n        if (this.props.modalType === 'create') {\n            return (\n                <Button color='green' size='medium' float='left' onClick={() => this.setState({ open: true })}>\n                    <Icon name='plus' /> \n                    Create New Workout\n                </Button>\n            );\n        } else if (this.props.modalType === 'delete') {\n            return (\n                <Button color='red' size='mini' animated='fade' onClick={() => this.setState({ open: true })}>\n                    <Button.Content hidden>\n                        Delete\n                    </Button.Content>\n                    <Button.Content visible>\n                        <Icon name='delete'/> \n                    </Button.Content>\n                </Button>\n            );\n        } else if (this.props.modalType === 'edit') {\n            return (\n                <Button color='teal' size='mini' animated='fade' onClick={() => this.setState({ open: true })}>\n                    <Button.Content hidden>\n                        Edit\n                    </Button.Content>\n                    <Button.Content visible>\n                        <Icon name='edit outline'/> \n                    </Button.Content>\n                </Button>\n            );\n        } else if (this.props.modalType === 'select') {\n            return (\n                <Button color='blue' size='mini' animated='fade' onClick={(e) => this.handleSelect(e)}>\n                    <Button.Content hidden>\n                        Select\n                    </Button.Content>\n                    <Button.Content visible>\n                        <Icon name='play'/> \n                    </Button.Content>\n                </Button>\n            );\n        } else {  // Start button opens start workout modal\n            return (\n                <Button color='blue' size='medium' onClick={(e) => this.handleStart(e)}>\n                    Start\n                </Button>\n            );\n        }\n    }\n\n    render() {\n\n        return (\n            <div className='WorkoutModal'>\n                <Modal \n                    size='tiny' \n                    trigger={this.triggerButton() } \n                    open={this.state.open}\n                    closeIcon\n                    onClose={this.close}\n                >\n                    {this.modalHeader()}\n                    <Modal.Content className='modalDescription'>\n                        <Modal.Description>\n                            {this.modalDescription()}\n                        </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        {this.modalBottom()}\n                    </Modal.Actions>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default WorkoutModal;","import React, { Component } from 'react';\nimport { Card, Grid, Header } from 'semantic-ui-react';\n\nimport WorkoutModal from '../WorkoutModal';\nimport ExerciseList from '../ExerciseList';\nimport './index.css';\n\nclass WorkoutCard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            exercises: [],\n            exercisesJSX: <div />,\n            id: this.props.id,\n            userId: this.props.userId\n        };\n    }\n\n    componentDidMount = () => {\n        this.getExercises();\n    }\n\n    // retrieve user's exercises for specified workout\n    getExercises = async () => {\n        let exercises = [];\n        const res = await fetch(`http://localhost:5000/exercises/retrieve?id=${this.state.id}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n            },\n        })\n\n        const resJSON = await res.json();\n\n         resJSON.forEach(async e => {\n            await exercises.push([e.name, e.id])\n        })\n        await this.setState({ exercises: exercises });\n        await this.renderExercises();\n    }\n\n    updateWorkout = () => {\n        this.props.updateWorkout();\n    }\n\n    renderExercises = async () => {\n        if (await this.state.exercises.length > 0) {\n            await this.setState({ exercisesJSX: <ExerciseList \n                                                    exercises={this.state.exercises} \n                                                    display='minimal' \n                                                /> \n            })\n        }\n    }\n\n    render() {\n\n        return (\n            <Card className='workoutCard' color='grey'>\n                <Card.Content className='cardHeader'>\n                    <Header as='h5' color='blue'>\n                        {this.props.name}\n                    </Header>\n                    {this.state.exercisesJSX}\n                </Card.Content>\n                <Grid columns='equal' className='cardButtons'>\n                    <Grid.Row columns={3}>\n                        <Grid.Column>\n                            <WorkoutModal userId={this.state.userId} modalType='delete' workoutId={this.state.id} updateWorkout={this.updateWorkout} />\n                        </Grid.Column>\n                        <Grid.Column>\n                            <WorkoutModal userId={this.state.userId} modalType='edit' workoutId={this.state.id} updateWorkout={this.updateWorkout} />\n                        </Grid.Column>\n                        <Grid.Column>\n                            <WorkoutModal userId={this.state.userId} modalType='select' workoutId={this.state.id} updateWorkout={this.updateWorkout} workoutName={this.props.name} />\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Card>\n        );\n    }\n}\n\nexport default WorkoutCard;","import React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\n\nimport WorkoutCard from '../WorkoutCard';\nimport './index.css';\n\nclass WorkoutCardList extends Component {\n\n    updateWorkout = () => {\n        this.props.updateWorkout();\n    }\n\n    render() {\n\n        return (\n            <Card.Group itemsPerRow='4' centered className='cardGroup'>\n                {this.props.workouts.map((workout) => {\n                    return (\n                        <WorkoutCard \n                            className='WorkoutCard' \n                            key={workout[1]} \n                            id={workout[1]} \n                            name={workout[0]}\n                            userId={workout[2]}\n                            updateWorkout={this.updateWorkout}\n                        />\n                    );\n                })}\n            </Card.Group>\n        );\n    }\n}\n\nexport default WorkoutCardList;","import React, {Component} from 'react';\n\nimport WorkoutCardList from '../../../shared_components/WorkoutCardList';\nimport WorkoutModal from '../../../shared_components/WorkoutModal';\nimport './index.css';\n\n\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            userId: this.props.userId,\n            workouts: [],\n            workoutsJSX: <div></div>\n        };\n    }\n\n    componentDidMount = () => {\n        this.getWorkouts();\n    }\n\n    // retrieve user's workouts from database upon first render\n    getWorkouts = async () => {\n        let workouts = [];\n        const res = await fetch(`http://localhost:5000/workouts/retrieve-all?id=${this.props.userId}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n            },\n        })\n\n        const resJSON = await res.json();\n\n         resJSON.forEach(async w => {\n            await workouts.push([w.name, w.id, this.props.userId])\n        })\n        await this.setState({ workouts: workouts });\n        await this.renderWorkouts();\n    }\n\n    // update workouts\n    updateWorkout = async () => {\n        await this.getWorkouts();\n    }\n\n    // render all workouts\n    renderWorkouts = async () => {\n        if (await this.state.workouts.length > 0) {\n            await this.setState({ workoutsJSX: <WorkoutCardList workouts={this.state.workouts} updateWorkout={this.updateWorkout} /> })\n        }\n    }\n\n    render() {\n        return (\n            <div className='Workouts'>\n                <WorkoutModal userId={this.state.userId} modalType=\"create\" updateWorkout={this.updateWorkout} />\n                {this.state.workoutsJSX}\n            </div>\n        );\n    }\n}\n\nexport default Workouts;","import React, { Component } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport wger from '../../../api/wger';\nimport Search from '../../../shared_components/Search';\nimport ExerciseList from '../../../shared_components/ExerciseList';\nimport './index.css';\n\nclass Exercises extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            exercises: [],              // API results\n            exerciseResults: <div></div>,  // JSX list\n            visible: false,\n            foundStatement: <p id=\"Found\"></p>,\n        };\n    }\n\n    // search for exercise results\n    onSearch = async search => {\n        const response = await wger.get('/exercise/search', {\n            params: { term: search }, \n        });\n\n        await this.setState({ exercises: response.data.suggestions, \n                              visible: true });\n        await this.updateVisibility();\n        await this.props.updateExercisePadding(this.state.exercises.length);\n    };\n\n    updateVisibility = () => {\n        if (this.state.visible === true) {\n            this.setState({ exerciseResults: <ExerciseList \n                                                exercises={this.state.exercises} \n                                                addOption={false} \n                                                removeOption={false} \n                                             />,\n                             foundStatement: <p id=\"Found\">Found: {this.state.exercises.length} exercises</p>\n            });\n        }\n    };\n\n    render() {\n        const { foundStatement, exerciseResults } = this.state;\n\n        return (\n            <div className='Exercises'>\n                <Grid className='Grid' textAlign='center' divided='vertically'>\n                    <Grid.Row className='Row'>\n                        <Grid.Column className='Column'>\n                            <Search onSearch={this.onSearch} />\n                            {foundStatement}\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row className='Row'>\n                        <Grid.Column className='Column'>\n                            {exerciseResults}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Exercises;","import React, {Component} from 'react';\nimport './index.css';\n\nclass Measurements extends Component {\n\n    render() {\n        return (\n            <div className=\"Measurements\">\n                <p>Cupcake Ipsum Noms</p>\n                Cupcake ipsum dolor sit amet bear claw jelly beans marshmallow. Candy canes gummi bears dessert candy canes caramels. Icing gummi bears carrot cake bonbon pie wafer sesame snaps. Bear claw croissant tiramisu gingerbread cupcake chupa chups pudding powder fruitcake. I love marshmallow sesame snaps pudding brownie. Gummi bears icing jelly beans. Chocolate cake caramels candy canes I love cake donut carrot cake jelly beans danish.\n            </div>\n        );\n    }\n}\n\nexport default Measurements;","import React, {PureComponent} from 'react';\nimport { Container, Tab } from 'semantic-ui-react';\n\nimport Overview from '../Overview';\nimport Workouts from '../Workouts';\nimport Exercises from '../Exercises';\nimport Measurements from '../Measurements';\n\nimport './index.css';\n\nclass Tabs extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userId: this.props.userId,\n            paddingBottom: '0px',\n            exercisePadding: 64,\n            panes: [\n                {\n                    menuItem: {\n                        key: 'overview',\n                        icon: 'user circle',\n                        content: 'Overview'\n                    },\n                    render: () => \n                        <Tab.Pane className=\"TabPane\">\n                            <Overview />\n                        </Tab.Pane>,\n                },\n                {\n                    menuItem: {\n                        key: 'workouts',\n                        icon: 'list layout',\n                        content: 'Workouts'\n                    },\n                    render: () => \n                        <Tab.Pane className=\"TabPane\">\n                            <Workouts userId={this.state.userId} />\n                        </Tab.Pane>,\n                },\n                {\n                    menuItem: {\n                        key: 'exercises',\n                        icon: 'unordered list',\n                        content: 'Exercises'\n                    },\n                    render: () =>\n                        <Tab.Pane className=\"TabPane\" style={{paddingBottom:`${this.state.paddingBottom}px`}}>\n                            <Exercises updateExercisePadding={this.updateExercisePadding}/>\n                        </Tab.Pane>,\n                },\n                {\n                    menuItem: {\n                        key: 'measurements',\n                        icon: 'line graph',\n                        content: 'Measurements'\n                    },\n                    render: () =>\n                        <Tab.Pane className=\"TabPane\">\n                            <Measurements />\n                        </Tab.Pane>,\n                }\n            ]\n        }\n    }\n\n    // updates the value of paddingBottom \n    updateExercisePadding = async length => {\n        await this.setState({paddingBottom: (length * this.state.exercisePadding) + 10})\n    }\n\n    render() {\n        return (\n            <div className=\"Tabs\">\n                <Container className=\"Container\">\n                    <Tab panes={this.state.panes} />\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Tabs;","import React, {Component} from 'react';\nimport './index.css';\n\nclass Settings extends Component {\n\n    render() {\n        return (\n            <div className=\"Settings\">\n                <p>Account Settings</p>\n                <ul>\n                    <li>Change Username</li>\n                    <li>Change Password</li>\n                    <li>Delete Account</li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import React, {Component} from 'react';\n\nimport { Grid, Message } from 'semantic-ui-react';\nimport './index.css';\n\nclass Logout extends Component {\n\n    render() {\n        return (\n            <div className='Logout'>\n                <Grid className='Grid' textAlign='center' verticalAlign='middle'>\n                    <Grid.Row className='Row'>\n                        <Grid.Column>\n                            <Message>Plan Your Next Session!</Message>\n                            <Message>\n                                <a href='/'>Login</a>\n                            </Message>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>  \n            </div>\n        );\n    }\n}\n\nexport default Logout;","import React, {Component} from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\n\nimport Nav from '../../../shared_components/Nav';\nimport Tabs from '../../tabContent/Tabs';\nimport Workouts from '../../tabContent/Workouts';\nimport Exercises from '../../tabContent/Exercises';\nimport Measurements from '../../tabContent/Measurements';\nimport Settings from '../../pages/Settings';\nimport Logout from '../Logout';\n\nimport './index.css';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logout: false,\n            userId: this.props.location.state.id,\n            userName: this.props.location.state.user\n        }\n    }\n\n    onLogout = async status => {\n        await this.setState({ logout: status })\n    }\n\n    render() {\n        const { userId, userName } = this.state;\n\n        if (this.state.logout === true) {\n            return (\n                <Logout onLogout={this.onLogout} />\n            );\n        } else {\n            return (\n                <BrowserRouter>                \n                    <div className=\"Profile\" >\n                        <Nav user={userName} id={userId} onLogout={this.onLogout} />\n                        <Container>\n                            <Route exact path=\"/profile\" \n                                         render={(props) => <Tabs {...props} userId={userId} />}/>\n                            <Route exact path=\"/profile/workouts\" \n                                         render={(props) => <Workouts {...props} userId={userId} />}/>\n                            <Route exact path=\"/profile/exercises\"\n                                         render={(props) => <Exercises {...props} userId={userId} />}/>\n                            <Route exact path=\"/profile/measurements\"\n                                         render={(props) => <Measurements {...props} userId={userId} />}/>\n                            <Route exact path=\"/profile/settings\" \n                                         render={(props) => <Settings {...props} userId={userId} />}/>\n                            <Route exact path=\"/logout\" component={Logout} />\n                        </Container>\n                    </div>\n                </BrowserRouter>                \n            );\n        }\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.css';\n\nconst Footer = props => {\n\n    let date = new Date();\n    let {\n        startYear = '2019',\n        currYear = date.getFullYear(),\n        endYear = ''\n    } = props;\n\n    if (startYear !== currYear.toString()) {\n        endYear = ' - ' + currYear;\n    }\n\n    return (\n        <div className=\"Footer\">\n            <p>&#x24B8; {startYear}{endYear} Lift Weights by Michelle Duer</p>\n        </div>\n    );\n}\n\nFooter.propTypes = {\n    startYear: PropTypes.string,\n    currYear: PropTypes.number,\n    endYear: PropTypes.string,\n};\n\nexport default Footer;","import React, {Component} from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\nimport Logout from './pages/Logout';\nimport './App.css';\n\n// shared components\nimport Footer from '../shared_components/Footer';\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>                \n                <div className=\"App\">\n                    <Route exact path=\"/\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/profile\" component={Profile} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Footer />\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n    <App />, \n    document.querySelector('#root')\n);\n"],"sourceRoot":""}